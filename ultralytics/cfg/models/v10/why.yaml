"""# Parameters
     from  n    params  module                                       arguments                     
  0                  -1  1       928  ultralytics.nn.modules.conv.Conv             [3, 32, 3, 2]                 
  1                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                
  2                  -1  1     29056  ultralytics.nn.modules.block.C2f             [64, 64, 1, True]             
  3                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               
  4                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           
  5                  -1  1     16610  ultralytics.nn.modules.conv.CBAM             [128]                         
  6                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              
  7                  -1  2    788480  ultralytics.nn.modules.block.C2f             [256, 256, 2, True]           
  8                  -1  1   1180672  ultralytics.nn.modules.conv.Conv             [256, 512, 3, 2]              
  9                  -1  1    958464  ultralytics.nn.modules.block.C2fCIB          [512, 512, 1, True, True]     
 10                  -1  1    656896  ultralytics.nn.modules.block.SPPF            [512, 512, 5]                 
 11                  -1  1      3168  ultralytics.nn.modules.block.EMA             [512]                         
 12                  -2  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          
 13             [-1, 7]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           
 14                  -1  1    591360  ultralytics.nn.modules.block.C2f             [768, 256, 1]                 
 15                  -1  1         3  ultralytics.nn.modules.conv.ECAAttention     [256]                         
 16                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          
 17             [-1, 5]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           
 18                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 
 19                  -1  1         3  ultralytics.nn.modules.conv.ECAAttention     [128]                         
 20                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              
 21            [-1, 14]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           
 22                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 
 23                  -1  1         3  ultralytics.nn.modules.conv.ECAAttention     [256]                         
 24                  -1  1     68864  ultralytics.nn.modules.block.SCDown          [256, 256, 3, 2]              
 25            [-1, 11]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           
 26                  -1  1   1063424  ultralytics.nn.modules.block.C2fCIB          [768, 512, 1, True]           
 27                  -1  1         3  ultralytics.nn.modules.conv.ECAAttention     [512]                         
 28        [19, 23, 27]  1   1648088  ultralytics.nn.modules.head.v10Detect        [12, [128, 256, 512]]         
hybridConv summary: 391 layers, 8380614 parameters, 8380598 gradients, 25.6 GFLOPs"""
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  s: [0.33, 0.50, 1024]         

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128]]
#  - [-1, 1, CBAM, [256]]

  
  - [-1, 1, Focus, [3, 3, 1]] 
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 3, C2f, [256]]
  - [-1, 1, CoordAtt, [256]]
  - [-1, 1, Conv, [128, 3, 2]]  
  - [-1, 3, C2f, [128]]
  - [-1, 1, CoordAtt, [128]]
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # Upsampling from P4 to P3



  - [-9, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 3, C2f, [256]]
  - [-1, 1, CBAM, [256]]
  
  - [-1, 1, Conv, [512, 3, 2]]  
  - [-1, 3, C2f, [512]]
  - [-1, 1, CBAM, [512]] #14



  - [-1, 1, Conv, [1024, 3, 2]] # P5/32
  - [-1, 3, C2fCIB, [1024, True, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 1, EMA, [1024]] # Applying SEBlock for fine-grained channel-wise recalibration at P3



head:
     
  # Applying SEBlock after C3Ghost for refining fine-grained features
  - [-2, 1, nn.Upsample, [None, 2, "nearest"]] # Upsampling from P5 to P4
  - [[-1, 16], 1, Concat, [1]] # Concatenate backbone P4 features
  - [-1, 1, C2f, [512]] # Applying SEBlock for fine-grained channel-wise recalibration at P4
  - [-1, 1, ECAAttention, [256]] # Applying SEBlock for fine-grained channel-wise recalibration at P3
#  - [-1, 1, CoordAtt, [256]] 

  - [[10, 6], 1, Concat, [1]] # Concatenate backbone P3 features
  - [-1, 3, C2f, [256]] # Feature extraction using C3Ghost at P3 level (P3/8-small)
  - [-1, 1, CoordAtt, [128]] 


  - [-4, 1, nn.Upsample, [None, 2, "nearest"]] # Upsampling from P4 to P3
  - [[-1, 13], 1, Concat, [1]] # Concatenate backbone P3 features
  #- [[-1, 7], 1, Concat, [1]] # Concatenate backbone P3 features
  - [-1, 3, C2f, [256]] # Feature extraction using C3Ghost at P3 level (P3/8-small)
  - [-1, 1, ECAAttention, [128]] # Applying SEBlock for fine-grained channel-wise recalibration at P3

  - [-1, 1, Conv, [256, 3, 2]] # Downsample to P4 level
  - [[-1, 23], 1, Concat, [1]] # Concatenate head P4 features
  - [-1, 3, C2f, [512]] # Feature extraction using C3Ghost at P4 level (P4/16-medium)
  - [-1, 1, ECAAttention , [256]] # Applying EMA to emphasize prominent features at P4

  - [-1, 1, SCDown, [512, 3, 2]] # Downsample to P5 level
  - [[-1, 19], 1, Concat, [1]] # Concatenate head P5 features
  - [-1, 3, C2fCIB, [1024]] # Feature extraction using C3Ghost at P5 level (P5/32-large)
  - [-1, 1, ECAAttention, [512]] # Applying EMA to emphasize prominent features at P4

  # Detection layer to output results for each level (P3, P4, P5)
  - [[27,31,35,39], 1, v10Detect, [nc]] # Detect at different scales (P3, P4, P5)
